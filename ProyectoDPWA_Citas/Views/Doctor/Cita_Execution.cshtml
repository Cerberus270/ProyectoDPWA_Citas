@model ProyectoDPWA_Citas.Models.ViewModels.Cita_Execution

@{
    ViewData["Title"] = "Cita_Execution";
    Layout = "_Layout2";
}


@section Styles{

}
<h4>Atendiendo cita del paciente @(Model.cita.IdPacienteNavigation.Nombres + " " + Model.cita.IdPacienteNavigation.Apellidos)</h4>
<hr />

<!-- #region mostar los datos de la cita -->
<div class="row">
    @Html.LabelFor(m => m.cita.IdCita, "Cod. Cita", new { @class = "col-sm-2 col-form-label" })
    <div class="col-sm-10">
        <p class="fw-bold col-form-label">@Model.cita.IdCita</p>
    </div>
</div>
<div class="row">
    @Html.LabelFor(m => m.cita.Fecha, "Fecha:", new { @class = "col-sm-2 col-form-label" })
    <div class="col-sm-10">
        <p class="fw-bold col-form-label">@Model.cita.FechaShort</p>
    </div>
</div>
<div class="row">
    @Html.LabelFor(m => m.cita.Fecha, "Hora:", new { @class = "col-sm-2 col-form-label" })
    <div class="col-sm-10">
        <p class="fw-bold col-form-label">@Model.cita.HoraShort</p>
    </div>
</div>
<div class="row">
    @Html.LabelFor(m => m.cita.IdPacienteNavigation.Nombres, "Nombre paciente", new { @class = "col-sm-2 col-form-label" })
    <div class="col-sm-10">
        <p class="fw-bold col-form-label">
            @(Model.cita.IdPacienteNavigation.Nombres+" "+Model.cita.IdPacienteNavigation.Apellidos)
        </p>
    </div>
</div>
<div class="row">
    @Html.LabelFor(m => m.cita.Estado, "Estado Cita:", new { @class = "col-sm-2 col-form-label" })
    <div class="col-sm-10">
        <p class="fw-bold col-form-label">
            @Model.cita.Estado
        </p>
    </div>
</div>
<!-- #endregion //Mostrar los datos de la cita -->

<!-- #region formulario del diagnostico-->
<h4>Datos del diagnostico</h4>
<hr />
<form id="frmDiagnostico">
    <div class="row">
        @Html.LabelFor(m => Model.cita.DiagnosticoCurrent.IdDiagnostico,
            "Cod. Diagnostico", new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            <p class="fw-bold col-form-label">@Model.cita.DiagnosticoCurrent.IdDiagnosticoString</p>
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(m => m.cita.DiagnosticoCurrent.Descripcion,
            "Descripcion", new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            <textarea class="form-control"
                      id="txaDiagnosticoDescripcion"
                      name="txaDiagnosticoDescripcion"></textarea>
        </div>
    </div>
    <!-- #endregion //formulario de diagnostico-->
    <!-- #region formulario de receta -->
    <h4>Datos de la receta</h4>
    <hr />
    <div class="row">
        @Html.LabelFor(m => Model.cita.DiagnosticoCurrent.RecetaCurrent.IdReceta,
            "Cod. Receta", new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            <p class="fw-bold col-form-label">@Model.cita.DiagnosticoCurrent.RecetaCurrent.IdReceta</p>
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(m => m.receta.FechaPrescripcion,
            "Fecha Prescripcion", new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            <p class="fw-bold col-form-label">
                @{
                    String fechaPrescripcion;
                    if (Model.receta.FechaPrescripcion == DateTime.MinValue)
                    {
                        fechaPrescripcion = "Será generada";
                    }
                    else
                    {
                        fechaPrescripcion = Model.receta.FechaPrescripcion.ToShortDateString();
                    }
                }
                @fechaPrescripcion
            </p>
        </div>
    </div>

    <hr />
    <div class="text-danger">
        <span></span>
    </div>
</form>
<!-- #endregion //formulario de receta -->

<!-- #region DETALLES DE RECETA-->
<!-- Boton para mostar el modal de detalles de la receta -->
<button type="button" class="btn btn-primary my-3" data-bs-toggle="modal" data-bs-target="#modalDetallesReceta">
    Administar Detalles de la receta
</button>

<!-- modal para ingresar el diagnostico -->
<div class="modal fade" id="modalDetallesReceta" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Detalle de la receta</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <!-- #region FORMULARIO frmDetalleReceta -->
                <form id="frmDetalleReceta">
                    <div class="mb-3">
                        <label for="txtRecetaDetalleMedicamento"
                               class="col-sm-2 form-label">
                            Medicamento
                        </label>
                        <input type="text" id="txtRecetaDetalleMedicamento"
                               name="txtRecetaDetalleMedicamento"
                               class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label for="txaRecetaDetalleIndicaciones"
                               class="col-sm-2 form-label">
                            Indicaciones
                        </label>
                        <textarea id="txaRecetaDetalleIndicaciones"
                                  name="txaRecetaDetalleIndicaciones"
                                  class="form-control"></textarea>
                    </div>
                    <hr />
                    <div class="text-danger">
                        <span></span>
                    </div>
                    <br />
                    <button type="button"
                            class="btn btn-outline-primary mb-3"
                            id="btnDetallesRecetaAnnadir">
                        Añadir detalle a la receta
                    </button>
                </form>
                <div class="table-responsive">
                    <table class="table"
                           id="tblDetallesReceta">

                        <thead class="thead-dark">
                            <tr>
                                <th>Medicamento</th>
                                <th>Indicaciones</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
                <!-- #endregion FORMULARIO frmDetalleReceta-->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- #endregion //DETALLES DE RECETA-->

<br />
<button type="button" class="btn btn-outline-primary my-3"
        id="btnGuardarTodo">
    Completar cita
</button>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{/*await Html.RenderPartialAsync("_ValidationScriptsPartial");*/}
<script>
    var detallesReceta = new Array();

    //#region FUNCONES DE UTILIDAD PARA frmDetalleReceta
    function generarTabla() {
        let tableHtml = "";

        detallesReceta.forEach((element) => {
            tableHtml += `
                        <tr>
                            <td>${element.medicamento}</td>
                            <td>${element.indicaciones}</td>
                            <td>
                                <button type="button"
                                    class="btn btn-outline-danger"
                                    onClick="eliminarDetalleRecetaFrmDetalleReceta('${element.medicamento}')">
                                    Eliminar
                                </buton>
                            </td>
                        </tr>
                    `;
        });

        $("#tblDetallesReceta").find("tbody").html(tableHtml);
    }

    function limpiarFrmDetalleReceta() {
        $("#txtRecetaDetalleMedicamento").prop('value','');
        $("#txaRecetaDetalleIndicaciones").prop('value', '');
    }
    //#endregion FUNCONES DE UTILIDAD PARA frmDetalleReceta

    //#region funcion para eliminar un detalle receta temporal
    function eliminarDetalleRecetaFrmDetalleReceta(medicamento) {
        let index = detallesReceta.findIndex((element) => {
            return element.medicamento == medicamento;
        });

        if (index > -1) {
            detallesReceta.splice(index, 1);
        }

        generarTabla();
    }
    //#endregion funcion para eliminar un detalle receta temporal

    $(document).ready(() => {
        //#region annadir el detalle temporalmente
        $("#btnDetallesRecetaAnnadir").click(() => {
            //#region VALIDAR FORMULARIO frmDetalleReceta
            let frmDetalleReceta = $("#frmDetalleReceta");
            frmDetalleReceta.validate({
                errorClass: "text-danger",
                invalidHandler: function (event, validator) {
                    var errors = validator.numberOfInvalids();
                    if (errors) {
                        var message = errors == 1
                            ? 'Un campo no es válido'
                            : errors + ' campos no son validos.';
                        $("div.text-danger span").html(message);
                        $("div.text-danger").show();
                    } else {
                        $("div.text-danger").hide();
                    }
                },
                rules: {
                    txtRecetaDetalleMedicamento: {
                        required: true,
                        minlength: 5
                    },
                    txaRecetaDetalleIndicaciones: {
                        required: true,
                        minlength: 5
                    }
                },
                messages: {
                    txtRecetaDetalleMedicamento: "Escriba un medicamento válido",
                    txaRecetaDetalleIndicaciones: "Escriba una indicación válida"
                }
            });
            //#endregion

            //annadir el detalle a la tabla
            console.info("frmDetalleReceta es valido?: "+frmDetalleReceta.valid());
            if (frmDetalleReceta.valid()) {
                frmDetalleReceta.find("div.text-danger").hide();
                let dr = {
                    medicamento: $("#txtRecetaDetalleMedicamento").val(),
                    indicaciones: $("#txaRecetaDetalleIndicaciones").val()
                }

                let index = detallesReceta.findIndex((element) => {
                    return element.medicamento == dr.medicamento
                });

                if (index > -1) {
                    detallesReceta[index] = dr;
                } else {
                    detallesReceta.push(dr);
                }

                //limpiar controles
                limpiarFrmDetalleReceta();

                //recrear tabla
                generarTabla();
            }
        });
        //#endregion

        //#region guardar todos los cambios
        $("#btnGuardarTodo").click(() => {    
            //#region VALIDAR FORMULARIO frmDiagnostico
            let frmDiagnostico = $("#frmDiagnostico");

            frmDiagnostico.validate({
                errorClass: "text-danger",
                invalidHandler: function (event, validator) {
                    var errors = validator.numberOfInvalids();
                    if (errors) {
                        var message = errors == 1
                            ? 'Un campo no es válido'
                            : errors + ' campos no son validos.';
                        $("div.error span").html(message);
                        $("div.error").show();
                    } else {
                        $("div.error").hide();
                    }
                },
                rules: {
                    txaDiagnosticoDescripcion: {
                        required: true,
                        minlength: 5
                    }
                },
                messages: {
                    txaDiagnosticoDescripcion: "Ingrese una descripción de diagnostico"
                }
            });
            //#endregion VALIDAR FORMULARIO frmDiagnostico

            console.info("frmDiagnostico es valido? " + frmDiagnostico.valid());
            if (frmDiagnostico.valid()) {
                frmDiagnostico.find("div.text-danger").hide();
                //determinar si hay detalles de receta
                if (detallesReceta.length == 0) {
                    Swal.fire(
                        'Error',
                        'Debe incluir al menos 1 detalle para la receta',
                        'error'
                    )
                    return;
                }
     
                //preparar y enviar los datos
                let frmDiagnosticoSerialized = $("#frmDiagnostico").serializeArray()[0];
                diagnostico = {
                    Descripcion: frmDiagnosticoSerialized.value,
                }

                let dataToSend = {
                    cita: { IdCita: @Model.cita.IdCita },
                    diagnostico: diagnostico,
                    receta: undefined,
                    detallesReceta: detallesReceta
                }

                console.info("dataToSend: ");
                console.info(dataToSend);

                //enviar el formulario
                $.ajax({
                    method: "POST",
                    url: "@Url.Action("Cita_Execution_Save")",
                    data: dataToSend
                }).done(function (msg) {
                    console.info("Respuesta done: " + msg);
                    if (msg == "Exito") {
                        Swal.fire(
                            'Completado',
                            msg,
                            'success'
                        ).then(() => {
                            window.location.replace("@Url.Action("index")");
                        });
                    } else {
                        Swal.fire(
                            'Error',
                            msg,
                            'error'
                        )
                    }
                }).fail(function (jqXHR, textStatus) {
                    Swal.fire(
                        'Completado',
                        textStatus,
                        'error'
                    )
                });
            }
        });
        //#endregion
    });
</script>
}

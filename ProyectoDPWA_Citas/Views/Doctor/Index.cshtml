@model IEnumerable<ProyectoDPWA_Citas.Models.CIta>

@{
    ViewData["Title"] = "Menu Citas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link href="~/lib/datatables.net-bs4/dataTables.bootstrap4.css" type="text/css" rel="stylesheet" />
    <link href="~/lib/jquery-datetimepicker/jquery.datetimepicker.css" type="text/css" rel="stylesheet" />
    <link href="~/lib/dataTables.dateTime.min.css" type="text/css" rel="stylesheet" />
}

<h1>Citas del dia de hoy</h1>

<div class="form-group row">
    <label for="filtroFecha" class="col-sm-2 col-form-label">Fecha Filtro:</label>
    <div class="col-sm-2">
        <input type="text" id="filtroFecha" name="filtroFecha" class="form-control">
    </div>
</div>
<div class="table-responsive">
    <table id="tablaCitas" class="table table-hover " style="width:100%">
        <thead class="thead-dark">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.IdCita)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Fecha)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Hora)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Estado)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IdPacienteNavigation)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                var fecCita = item.Fecha.ToString("dd/MM/yyyy");
                // Converts the timespan format, thats include Hour, minutes and seconds to a standar format
                var horaCita = item.Hora.ToString(@"hh\:mm");
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.IdCita)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => fecCita)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => horaCita)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Estado)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IdPacienteNavigation.Nombres)
                    @Html.DisplayFor(modelItem => item.IdPacienteNavigation.Apellidos)
                </td>
                <td>
                    <div class="btn-group">
                        @if (item.Estado == "Pendiente" || item.Estado == "Confirmada")
                        {

                            <a asp-action="Iniciar" asp-route-id="@item.IdCita" class="btn btn-sm btn-info"><i class="bi bi-pencil-square"></i> Iniciar Cita</a>

                        }
                        <a asp-action="Details" asp-route-id="@item.IdCita" class="btn btn-sm btn-primary ml-1"><i class="bi bi-postcard"></i> Detalles</a>
                        <a asp-action="Expediente" asp-route-id="@item.IdPaciente" class="btn btn-sm btn-primary ml-1"><i class="bi bi-person-rolodex"></i> Expediente Paciente</a>
                    </div>
                </td>
            </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script src="~/lib/datatables.net/jquery.dataTables.min.js"></script>
    <script src="~/lib/datatables.net-bs4/dataTables.bootstrap4.js"></script>
    <script src="~/lib/moment.js/moment.min.js"></script>
    <script src="~/lib/dataTables.dateTime.min.js"></script>
    <script>
        var dateFilter;

        // Custom filtering function which will search data in column four between two values

        $(document).ready(function () {
            var day = new Date();
            // Create date inputs
            dateFilter = new DateTime($('#filtroFecha'), {
                format: 'DD/MM/YYYY'
            });

            $('#filtroFecha').val(formatDate(new Date()))

            var table = $('#tablaCitas').DataTable({
                "autoWidth": false,
                language: {
                    "processing": "Procesando...",
                    "lengthMenu": "Mostrar _MENU_ registros",
                    "zeroRecords": "No se encontraron resultados",
                    "emptyTable": "Ningún dato disponible en esta tabla",
                    "infoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "infoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "search": "Buscar:",
                    "infoThousands": ",",
                    "loadingRecords": "Cargando...",
                    "paginate": {
                        "first": "Primero",
                        "last": "Último",
                        "next": "Siguiente",
                        "previous": "Anterior"
                    },
                    "aria": {
                        "sortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sortDescending": ": Activar para ordenar la columna de manera descendente"
                    },
                    "buttons": {
                        "copy": "Copiar",
                        "colvis": "Visibilidad",
                        "collection": "Colección",
                        "colvisRestore": "Restaurar visibilidad",
                        "copyKeys": "Presione ctrl o u2318 + C para copiar los datos de la tabla al portapapeles del sistema. <br \/> <br \/> Para cancelar, haga clic en este mensaje o presione escape.",
                        "copySuccess": {
                            "1": "Copiada 1 fila al portapapeles",
                            "_": "Copiadas %ds fila al portapapeles"
                        },
                        "copyTitle": "Copiar al portapapeles",
                        "csv": "CSV",
                        "excel": "Excel",
                        "pageLength": {
                            "-1": "Mostrar todas las filas",
                            "_": "Mostrar %d filas"
                        },
                        "pdf": "PDF",
                        "print": "Imprimir",
                        "renameState": "Cambiar nombre",
                        "updateState": "Actualizar",
                        "createState": "Crear Estado",
                        "removeAllStates": "Remover Estados",
                        "removeState": "Remover",
                        "savedStates": "Estados Guardados",
                        "stateRestore": "Estado %d"
                    },
                    "autoFill": {
                        "cancel": "Cancelar",
                        "fill": "Rellene todas las celdas con <i>%d<\/i>",
                        "fillHorizontal": "Rellenar celdas horizontalmente",
                        "fillVertical": "Rellenar celdas verticalmentemente"
                    },
                    "decimal": ",",
                    "searchBuilder": {
                        "add": "Añadir condición",
                        "button": {
                            "0": "Constructor de búsqueda",
                            "_": "Constructor de búsqueda (%d)"
                        },
                        "clearAll": "Borrar todo",
                        "condition": "Condición",
                        "conditions": {
                            "date": {
                                "after": "Despues",
                                "before": "Antes",
                                "between": "Entre",
                                "empty": "Vacío",
                                "equals": "Igual a",
                                "notBetween": "No entre",
                                "notEmpty": "No Vacio",
                                "not": "Diferente de"
                            },
                            "number": {
                                "between": "Entre",
                                "empty": "Vacio",
                                "equals": "Igual a",
                                "gt": "Mayor a",
                                "gte": "Mayor o igual a",
                                "lt": "Menor que",
                                "lte": "Menor o igual que",
                                "notBetween": "No entre",
                                "notEmpty": "No vacío",
                                "not": "Diferente de"
                            },
                            "string": {
                                "contains": "Contiene",
                                "empty": "Vacío",
                                "endsWith": "Termina en",
                                "equals": "Igual a",
                                "notEmpty": "No Vacio",
                                "startsWith": "Empieza con",
                                "not": "Diferente de",
                                "notContains": "No Contiene",
                                "notStarts": "No empieza con",
                                "notEnds": "No termina con"
                            },
                            "array": {
                                "not": "Diferente de",
                                "equals": "Igual",
                                "empty": "Vacío",
                                "contains": "Contiene",
                                "notEmpty": "No Vacío",
                                "without": "Sin"
                            }
                        },
                        "data": "Data",
                        "deleteTitle": "Eliminar regla de filtrado",
                        "leftTitle": "Criterios anulados",
                        "logicAnd": "Y",
                        "logicOr": "O",
                        "rightTitle": "Criterios de sangría",
                        "title": {
                            "0": "Constructor de búsqueda",
                            "_": "Constructor de búsqueda (%d)"
                        },
                        "value": "Valor"
                    },
                    "searchPanes": {
                        "clearMessage": "Borrar todo",
                        "collapse": {
                            "0": "Paneles de búsqueda",
                            "_": "Paneles de búsqueda (%d)"
                        },
                        "count": "{total}",
                        "countFiltered": "{shown} ({total})",
                        "emptyPanes": "Sin paneles de búsqueda",
                        "loadMessage": "Cargando paneles de búsqueda",
                        "title": "Filtros Activos - %d",
                        "showMessage": "Mostrar Todo",
                        "collapseMessage": "Colapsar Todo"
                    },
                    "select": {
                        "cells": {
                            "1": "1 celda seleccionada",
                            "_": "%d celdas seleccionadas"
                        },
                        "columns": {
                            "1": "1 columna seleccionada",
                            "_": "%d columnas seleccionadas"
                        },
                        "rows": {
                            "1": "1 fila seleccionada",
                            "_": "%d filas seleccionadas"
                        }
                    },
                    "thousands": ".",
                    "datetime": {
                        "previous": "Anterior",
                        "next": "Proximo",
                        "hours": "Horas",
                        "minutes": "Minutos",
                        "seconds": "Segundos",
                        "unknown": "-",
                        "amPm": [
                            "AM",
                            "PM"
                        ],
                        "months": {
                            "0": "Enero",
                            "1": "Febrero",
                            "10": "Noviembre",
                            "11": "Diciembre",
                            "2": "Marzo",
                            "3": "Abril",
                            "4": "Mayo",
                            "5": "Junio",
                            "6": "Julio",
                            "7": "Agosto",
                            "8": "Septiembre",
                            "9": "Octubre"
                        },
                        "weekdays": [
                            "Dom",
                            "Lun",
                            "Mar",
                            "Mie",
                            "Jue",
                            "Vie",
                            "Sab"
                        ]
                    },
                    "editor": {
                        "close": "Cerrar",
                        "create": {
                            "button": "Nuevo",
                            "title": "Crear Nuevo Registro",
                            "submit": "Crear"
                        },
                        "edit": {
                            "button": "Editar",
                            "title": "Editar Registro",
                            "submit": "Actualizar"
                        },
                        "remove": {
                            "button": "Eliminar",
                            "title": "Eliminar Registro",
                            "submit": "Eliminar",
                            "confirm": {
                                "_": "¿Está seguro que desea eliminar %d filas?",
                                "1": "¿Está seguro que desea eliminar 1 fila?"
                            }
                        },
                        "error": {
                            "system": "Ha ocurrido un error en el sistema (<a target=\"\\\" rel=\"\\ nofollow\" href=\"\\\">Más información&lt;\\\/a&gt;).<\/a>"
                        },
                        "multi": {
                            "title": "Múltiples Valores",
                            "info": "Los elementos seleccionados contienen diferentes valores para este registro. Para editar y establecer todos los elementos de este registro con el mismo valor, hacer click o tap aquí, de lo contrario conservarán sus valores individuales.",
                            "restore": "Deshacer Cambios",
                            "noMulti": "Este registro puede ser editado individualmente, pero no como parte de un grupo."
                        }
                    },
                    "info": "Mostrando _START_ a _END_ de _TOTAL_ registros",
                    "stateRestore": {
                        "creationModal": {
                            "button": "Crear",
                            "name": "Nombre:",
                            "order": "Clasificación",
                            "paging": "Paginación",
                            "search": "Busqueda",
                            "select": "Seleccionar",
                            "columns": {
                                "search": "Búsqueda de Columna",
                                "visible": "Visibilidad de Columna"
                            },
                            "title": "Crear Nuevo Estado",
                            "toggleLabel": "Incluir:"
                        },
                        "emptyError": "El nombre no puede estar vacio",
                        "removeConfirm": "¿Seguro que quiere eliminar este %s?",
                        "removeError": "Error al eliminar el registro",
                        "removeJoiner": "y",
                        "removeSubmit": "Eliminar",
                        "renameButton": "Cambiar Nombre",
                        "renameLabel": "Nuevo nombre para %s",
                        "duplicateError": "Ya existe un Estado con este nombre.",
                        "emptyStates": "No hay Estados guardados",
                        "removeTitle": "Remover Estado",
                        "renameTitle": "Cambiar Nombre Estado"
                    }
                }
            });

            table.search(formatDate(day)).draw();

            // Refilter the table
            $('#filtroFecha').on('change', function () {
                var dateInput = dateFilter.val();
                if (dateInput !== null) {
                    var valueDate = new Date(dateInput.getTime() - dateInput.getTimezoneOffset() * -60000)
                    console.log(valueDate)
                    //const yyyy = valueDate.getFullYear();
                    //let mm = valueDate.getMonth() + 1;
                    //let dd = valueDate.getDate();

                    //if (dd < 10) dd = '0' + dd;
                    //if (mm < 10) mm = '0' + mm;

                    //let today = dd + '/' + mm + '/' + yyyy;
                    var today = formatDate(valueDate);
                    table.search(today).draw();
                } else {
                    table.search("").draw()
                }
            });
        });

        function padTo2Digits(num) {
            return num.toString().padStart(2, '0');
        }

        function formatDate(date) {
            return [
                padTo2Digits(date.getDate()),
                padTo2Digits(date.getMonth() + 1),
                date.getFullYear(),
            ].join('/');
        }


    </script>
}